<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.cintel.validatenewskill.service.dao.generate.BNetPatientMapper">
  <resultMap id="BaseResultMap" type="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatient">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="GENDER" jdbcType="INTEGER" property="gender" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
    <result column="AGE" jdbcType="INTEGER" property="age" />
    <result column="ID_CARD" jdbcType="VARCHAR" property="idCard" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="BIRTH_DATE" jdbcType="DATE" property="birthDate" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, GENDER, NAME, NICKNAME, AGE, ID_CARD, PHONE, ADDRESS, BIRTH_DATE, REMARK, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_net_patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_net_patient
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from b_net_patient
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatientExample">
    delete from b_net_patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatient">
    insert into b_net_patient (ID, GENDER, NAME, 
      NICKNAME, AGE, ID_CARD, 
      PHONE, ADDRESS, BIRTH_DATE, 
      REMARK, CREATE_TIME)
    values (#{id,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{idCard,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{birthDate,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatient">
    insert into b_net_patient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="gender != null">
        GENDER,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="nickname != null">
        NICKNAME,
      </if>
      <if test="age != null">
        AGE,
      </if>
      <if test="idCard != null">
        ID_CARD,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="birthDate != null">
        BIRTH_DATE,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatientExample" resultType="java.lang.Long">
    select count(*) from b_net_patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update b_net_patient
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        GENDER = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        AGE = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.idCard != null">
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        BIRTH_DATE = #{record.birthDate,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update b_net_patient
    set ID = #{record.id,jdbcType=VARCHAR},
      GENDER = #{record.gender,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      AGE = #{record.age,jdbcType=INTEGER},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      BIRTH_DATE = #{record.birthDate,jdbcType=DATE},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatient">
    update b_net_patient
    <set>
      <if test="gender != null">
        GENDER = #{gender,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        AGE = #{age,jdbcType=INTEGER},
      </if>
      <if test="idCard != null">
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        BIRTH_DATE = #{birthDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.cintel.validatenewskill.service.entity.generate.BNetPatient">
    update b_net_patient
    set GENDER = #{gender,jdbcType=INTEGER},
      NAME = #{name,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      AGE = #{age,jdbcType=INTEGER},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      BIRTH_DATE = #{birthDate,jdbcType=DATE},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>